{"ast":null,"code":"export function textFormValidator(){return{required:\"This field is required\"};}export function emailFormValidator(){return{required:\"This field is required\",maxLength:{value:30,message:\"Email shouldnot be more than 30 characters long\"},validate:function validate(value){var pattern=/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;return pattern.test(value)||\"Email is invalid\";}};}export function passwordFormValidator(){return{required:\"This field is required\",minLength:{value:8,message:\"Password must be minimum 8 letters long\"},validate:function validate(value){return[/[a-z]/,/[A-Z]/,/[0-9]/,/[^a-zA-Z0-9]/].every(function(pattern){return pattern.test(value);})||\"Password must include a-z, A-Z, @..and 0-9\";}};}export function confirmPasswordValidator(getValues){return{required:\"This field is required\",validate:function validate(value){return value===getValues().password||\"passwords doesnt match\";}};}","map":{"version":3,"sources":["/Users/takasivenkatasandeep/Desktop/vamsi-sanjreevi-notes/src/FormValidators/FormValidator.js"],"names":["textFormValidator","required","emailFormValidator","maxLength","value","message","validate","pattern","test","passwordFormValidator","minLength","every","confirmPasswordValidator","getValues","password"],"mappings":"AAAA,MAAO,SAASA,CAAAA,iBAAT,EAA6B,CAClC,MAAO,CACLC,QAAQ,CAAE,wBADL,CAAP,CAGD,CACD,MAAO,SAASC,CAAAA,kBAAT,EAA8B,CACnC,MAAO,CACLD,QAAQ,CAAE,wBADL,CAELE,SAAS,CAAE,CACTC,KAAK,CAAE,EADE,CAETC,OAAO,CAAE,iDAFA,CAFN,CAMLC,QAAQ,CAAE,kBAACF,KAAD,CAAW,CACnB,GAAIG,CAAAA,OAAO,CAAG,wJAAd,CACA,MAAOA,CAAAA,OAAO,CAACC,IAAR,CAAaJ,KAAb,GAAuB,kBAA9B,CACD,CATI,CAAP,CAWD,CACD,MAAO,SAASK,CAAAA,qBAAT,EAAiC,CACtC,MAAO,CACLR,QAAQ,CAAE,wBADL,CAELS,SAAS,CAAE,CAAEN,KAAK,CAAE,CAAT,CAAYC,OAAO,CAAE,yCAArB,CAFN,CAGLC,QAAQ,CAAE,kBAACF,KAAD,CAAW,CACnB,MACE,CAAC,OAAD,CAAU,OAAV,CAAmB,OAAnB,CAA4B,cAA5B,EAA4CO,KAA5C,CAAkD,SAACJ,OAAD,QAChDA,CAAAA,OAAO,CAACC,IAAR,CAAaJ,KAAb,CADgD,EAAlD,GAEK,4CAHP,CAKD,CATI,CAAP,CAWD,CACD,MAAO,SAASQ,CAAAA,wBAAT,CAAkCC,SAAlC,CAA6C,CAClD,MAAO,CACLZ,QAAQ,CAAE,wBADL,CAELK,QAAQ,CAAE,kBAACF,KAAD,QACRA,CAAAA,KAAK,GAAKS,SAAS,GAAGC,QAAtB,EAAkC,wBAD1B,EAFL,CAAP,CAKD","sourcesContent":["export function textFormValidator() {\n  return {\n    required: \"This field is required\",\n  };\n}\nexport function emailFormValidator() {\n  return {\n    required: \"This field is required\",\n    maxLength: {\n      value: 30,\n      message: \"Email shouldnot be more than 30 characters long\",\n    },\n    validate: (value) => {\n      let pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return pattern.test(value) || \"Email is invalid\";\n    },\n  };\n}\nexport function passwordFormValidator() {\n  return {\n    required: \"This field is required\",\n    minLength: { value: 8, message: \"Password must be minimum 8 letters long\" },\n    validate: (value) => {\n      return (\n        [/[a-z]/, /[A-Z]/, /[0-9]/, /[^a-zA-Z0-9]/].every((pattern) =>\n          pattern.test(value)\n        ) || \"Password must include a-z, A-Z, @..and 0-9\"\n      );\n    },\n  };\n}\nexport function confirmPasswordValidator(getValues) {\n  return {\n    required: \"This field is required\",\n    validate: (value) =>\n      value === getValues().password || \"passwords doesnt match\",\n  };\n}\n"]},"metadata":{},"sourceType":"module"}