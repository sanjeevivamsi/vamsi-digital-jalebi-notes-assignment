{"ast":null,"code":"var _jsxFileName = \"/Users/takasivenkatasandeep/Desktop/vamsi-sanjreevi-notes/src/Components/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport useFormStyles from \"../Themes/FormStyle\";\nimport { useForm } from \"react-hook-form\";\nimport { passwordFormValidator, emailFormValidator, confirmPasswordValidator } from \"../FormValidators/FormValidator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Signup(props) {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    errors,\n    getValues\n  } = useForm({\n    mode: \"onChange\"\n  });\n\n  const handleSignupSubmit = async data => {\n    await props.functionCall(data.email, data.password);\n    props.history.push(\"/notes\");\n  };\n\n  const classes = useFormStyles();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        style: {\n          backgroundColor: \"#4267B2\"\n        },\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit(handleSignupSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              fullWidth: true,\n              id: \"email\",\n              label: \"Email Address\",\n              name: \"email\",\n              type: \"email\",\n              autoComplete: \"off\",\n              inputRef: register(emailFormValidator()),\n              error: errors.email ? true : false,\n              helperText: errors.email ? errors.email.message : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              fullWidth: true,\n              name: \"password\",\n              label: \"Password\",\n              type: \"password\",\n              id: \"password\",\n              autoComplete: \"off\",\n              inputRef: register(passwordFormValidator()),\n              error: errors.password ? true : false,\n              helperText: errors.password ? errors.password.message : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              fullWidth: true,\n              name: \"confirmPassword\",\n              label: \"confirm Password\",\n              type: \"password\",\n              id: \"confirmPassword\",\n              autoComplete: \"off\",\n              inputRef: register(confirmPasswordValidator(getValues)),\n              error: errors.confirmPassword ? true : false,\n              helperText: errors.confirmPassword ? errors.confirmPassword.message : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Signup, \"+Y4U6jVDr7bDB4lCRAk+PLDb6EA=\", false, function () {\n  return [useForm, useFormStyles];\n});\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/takasivenkatasandeep/Desktop/vamsi-sanjreevi-notes/src/Components/Signup.js"],"names":["React","Avatar","Button","CssBaseline","TextField","Grid","LockOutlinedIcon","Typography","Container","useFormStyles","useForm","passwordFormValidator","emailFormValidator","confirmPasswordValidator","Signup","props","register","handleSubmit","errors","getValues","mode","handleSignupSubmit","data","functionCall","email","password","history","push","classes","paper","backgroundColor","avatar","form","message","confirmPassword","submit"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport useFormStyles from \"../Themes/FormStyle\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  passwordFormValidator,\n  emailFormValidator,\n  confirmPasswordValidator,\n} from \"../FormValidators/FormValidator\";\nexport default function Signup(props) {\n  const { register, handleSubmit, errors, getValues } = useForm({\n    mode: \"onChange\",\n  });\n  const handleSignupSubmit = async (data) => {\n    await props.functionCall(data.email, data.password);\n    props.history.push(\"/notes\");\n  };\n  const classes = useFormStyles();\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar\n          style={{ backgroundColor: \"#4267B2\" }}\n          className={classes.avatar}\n        >\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form\n          className={classes.form}\n          onSubmit={handleSubmit(handleSignupSubmit)}\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"off\"\n                inputRef={register(emailFormValidator())}\n                error={errors.email ? true : false}\n                helperText={errors.email ? errors.email.message : null}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"off\"\n                inputRef={register(passwordFormValidator())}\n                error={errors.password ? true : false}\n                helperText={errors.password ? errors.password.message : null}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                name=\"confirmPassword\"\n                label=\"confirm Password\"\n                type=\"password\"\n                id=\"confirmPassword\"\n                autoComplete=\"off\"\n                inputRef={register(confirmPasswordValidator(getValues))}\n                error={errors.confirmPassword ? true : false}\n                helperText={\n                  errors.confirmPassword ? errors.confirmPassword.message : null\n                }\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}