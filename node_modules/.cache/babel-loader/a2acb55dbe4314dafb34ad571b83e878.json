{"ast":null,"code":"import _regeneratorRuntime from\"/Users/takasivenkatasandeep/Desktop/vamsi-sanjreevi-notes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/takasivenkatasandeep/Desktop/vamsi-sanjreevi-notes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/takasivenkatasandeep/Desktop/vamsi-sanjreevi-notes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/Users/takasivenkatasandeep/Desktop/vamsi-sanjreevi-notes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/takasivenkatasandeep/Desktop/vamsi-sanjreevi-notes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Grid,Button,TextField,CircularProgress}from\"@material-ui/core\";import React,{useState}from\"react\";import useFormStyles from\"../Themes/createNoteStyle\";import*as firebaseCalls from\"../services/firebase\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CreateNote(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),inputText=_useState2[0],setInputText=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState({isError:false,message:\"\"}),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];var handleInputChange=function handleInputChange(e){if(error.isError&&e.target.value!==\"\"){setError({isError:false,message:\"\"});}setInputText(e.target.value);};var handleCreateNoteSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var newNoteData,noteId;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();if(!(inputText===\"\")){_context.next=6;break;}setError({isError:true,message:\"This field is required\"});return _context.abrupt(\"return\");case 6:setLoading(true);newNoteData={text:inputText,userId:props.loggedinUser.id};_context.next=10;return firebaseCalls.addNote(newNoteData);case 10:noteId=_context.sent;props.setUserNotes(function(prevState){var newState=[].concat(_toConsumableArray(prevState),[_objectSpread(_objectSpread({},newNoteData),{},{id:noteId})]);return newState;});setInputText(\"\");setLoading(false);case 14:case\"end\":return _context.stop();}}},_callee);}));return function handleCreateNoteSubmit(_x){return _ref.apply(this,arguments);};}();var classes=useFormStyles();return/*#__PURE__*/_jsx(\"form\",{className:classes.form,onSubmit:handleCreateNoteSubmit,children:/*#__PURE__*/_jsxs(Grid,{xs:12,justify:\"space-between\",direction:\"row\",alignItems:\"center\",container:true,children:[/*#__PURE__*/_jsx(Grid,{className:classes.input,item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{variant:\"outlined\",fullWidth:true,id:\"Note\",multiline:true,type:\"text\",rows:3,rowsMax:5,label:\"Enter Your Note\",name:\"text\",onChange:handleInputChange,autoComplete:\"off\",value:inputText,error:error.isError,helperText:error.isError?error.message:null})}),/*#__PURE__*/_jsxs(Grid,{xs:12,className:classes.buttonWrapper,children:[/*#__PURE__*/_jsxs(Button,{type:\"submit\",fullWidth:true,variant:\"contained\",color:\"primary\",disabled:loading,className:classes.submit,children:[/*#__PURE__*/_jsx(CircularProgress,{color:\"primary\",size:\"22px\",className:classes.loading,style:loading?{display:\"block\"}:{display:\"none\"}}),\"save\"]}),/*#__PURE__*/_jsx(Button,{fullWidth:true,variant:\"contained\",color:\"secondary\",disabled:loading,className:classes.submit,onClick:function onClick(){return setInputText(\"\");},children:\"clear\"})]})]})});}export default CreateNote;","map":{"version":3,"sources":["/Users/takasivenkatasandeep/Desktop/vamsi-sanjreevi-notes/src/Components/CreateNote.js"],"names":["Grid","Button","TextField","CircularProgress","React","useState","useFormStyles","firebaseCalls","CreateNote","props","inputText","setInputText","loading","setLoading","isError","message","error","setError","handleInputChange","e","target","value","handleCreateNoteSubmit","preventDefault","newNoteData","text","userId","loggedinUser","id","addNote","noteId","setUserNotes","prevState","newState","classes","form","input","buttonWrapper","submit","display"],"mappings":"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","sourcesContent":["import { Grid, Button, TextField, CircularProgress } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport useFormStyles from \"../Themes/createNoteStyle\";\nimport * as firebaseCalls from \"../services/firebase\";\n\nfunction CreateNote(props) {\n  const [inputText, setInputText] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState({ isError: false, message: \"\" });\n\n  const handleInputChange = (e) => {\n    if (error.isError && e.target.value !== \"\") {\n      setError({ isError: false, message: \"\" });\n    }\n    setInputText(e.target.value);\n  };\n\n  const handleCreateNoteSubmit = async (e) => {\n    e.preventDefault();\n    if (inputText === \"\") {\n      setError({ isError: true, message: \"This field is required\" });\n      return;\n    } else {\n      setLoading(true);\n      let newNoteData = {\n        text: inputText,\n        userId: props.loggedinUser.id,\n      };\n      const noteId = await firebaseCalls.addNote(newNoteData);\n      props.setUserNotes((prevState) => {\n        const newState = [...prevState, { ...newNoteData, id: noteId }];\n        return newState;\n      });\n      setInputText(\"\");\n      setLoading(false);\n    }\n  };\n\n  const classes = useFormStyles();\n  return (\n    <form className={classes.form} onSubmit={handleCreateNoteSubmit}>\n      <Grid\n        xs={12}\n        justify=\"space-between\"\n        direction=\"row\"\n        alignItems=\"center\"\n        container\n      >\n        <Grid className={classes.input} item xs={12}>\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            id=\"Note\"\n            multiline\n            type=\"text\"\n            rows={3}\n            rowsMax={5}\n            label=\"Enter Your Note\"\n            name=\"text\"\n            onChange={handleInputChange}\n            autoComplete=\"off\"\n            value={inputText}\n            error={error.isError}\n            helperText={error.isError ? error.message : null}\n          />\n        </Grid>\n        <Grid xs={12} className={classes.buttonWrapper}>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading}\n            className={classes.submit}\n          >\n            <CircularProgress\n              color=\"primary\"\n              size=\"22px\"\n              className={classes.loading}\n              style={loading ? { display: \"block\" } : { display: \"none\" }}\n            />\n            save\n          </Button>\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            disabled={loading}\n            className={classes.submit}\n            onClick={() => setInputText(\"\")}\n          >\n            clear\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n\nexport default CreateNote;\n"]},"metadata":{},"sourceType":"module"}