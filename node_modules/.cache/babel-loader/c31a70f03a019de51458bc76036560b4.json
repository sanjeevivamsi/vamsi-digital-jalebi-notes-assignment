{"ast":null,"code":"var _jsxFileName = \"/Users/takasivenkatasandeep/Desktop/vamsi-sanjreevi-notes/src/Components/CreateNote.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, Button, TextField, CircularProgress } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport useFormStyles from \"../Themes/createNoteStyle\";\nimport * as firebaseCalls from \"../services/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateNote(props) {\n  _s();\n\n  const [inputText, setInputText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState({\n    isError: false,\n    message: \"\"\n  });\n\n  const handleInputChange = e => {\n    if (error.isError && e.target.value !== \"\") {\n      setError({\n        isError: false,\n        message: \"\"\n      });\n    }\n\n    setInputText(e.target.value);\n  };\n\n  const handleCreateNoteSubmit = async e => {\n    e.preventDefault();\n\n    if (inputText === \"\") {\n      setError({\n        isError: true,\n        message: \"This field is required\"\n      });\n      return;\n    } else {\n      setLoading(true);\n      let newNoteData = {\n        text: inputText,\n        userId: props.loggedinUser.id\n      };\n      const noteId = await firebaseCalls.addNote(newNoteData);\n      props.setUserNotes(prevState => {\n        const newState = [...prevState, { ...newNoteData,\n          id: noteId\n        }];\n        return newState;\n      });\n      setInputText(\"\");\n      setLoading(false);\n    }\n  };\n\n  const classes = useFormStyles();\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: handleCreateNoteSubmit,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      justify: \"space-between\",\n      direction: \"row\",\n      alignItems: \"center\",\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.input,\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          fullWidth: true,\n          id: \"Note\",\n          multiline: true,\n          type: \"text\",\n          rows: 3,\n          rowsMax: 5,\n          label: \"Enter Your Note\",\n          name: \"text\",\n          onChange: handleInputChange,\n          autoComplete: \"off\",\n          value: inputText,\n          error: error.isError,\n          helperText: error.isError ? error.message : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        className: classes.buttonWrapper,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: loading,\n          className: classes.submit,\n          children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n            color: \"primary\",\n            size: \"22px\",\n            className: classes.loading,\n            style: loading ? {\n              display: \"block\"\n            } : {\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), \"save\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"secondary\",\n          disabled: loading,\n          className: classes.submit,\n          onClick: () => setInputText(\"\"),\n          children: \"clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateNote, \"oDF6GBERRdnXcLycZ/L31cd/mzc=\", false, function () {\n  return [useFormStyles];\n});\n\n_c = CreateNote;\nexport default CreateNote;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNote\");","map":{"version":3,"sources":["/Users/takasivenkatasandeep/Desktop/vamsi-sanjreevi-notes/src/Components/CreateNote.js"],"names":["Grid","Button","TextField","CircularProgress","React","useState","useFormStyles","firebaseCalls","CreateNote","props","inputText","setInputText","loading","setLoading","error","setError","isError","message","handleInputChange","e","target","value","handleCreateNoteSubmit","preventDefault","newNoteData","text","userId","loggedinUser","id","noteId","addNote","setUserNotes","prevState","newState","classes","form","input","buttonWrapper","submit","display"],"mappings":"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","sourcesContent":["import { Grid, Button, TextField, CircularProgress } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport useFormStyles from \"../Themes/createNoteStyle\";\nimport * as firebaseCalls from \"../services/firebase\";\n\nfunction CreateNote(props) {\n  const [inputText, setInputText] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState({ isError: false, message: \"\" });\n\n  const handleInputChange = (e) => {\n    if (error.isError && e.target.value !== \"\") {\n      setError({ isError: false, message: \"\" });\n    }\n    setInputText(e.target.value);\n  };\n\n  const handleCreateNoteSubmit = async (e) => {\n    e.preventDefault();\n    if (inputText === \"\") {\n      setError({ isError: true, message: \"This field is required\" });\n      return;\n    } else {\n      setLoading(true);\n      let newNoteData = {\n        text: inputText,\n        userId: props.loggedinUser.id,\n      };\n      const noteId = await firebaseCalls.addNote(newNoteData);\n      props.setUserNotes((prevState) => {\n        const newState = [...prevState, { ...newNoteData, id: noteId }];\n        return newState;\n      });\n      setInputText(\"\");\n      setLoading(false);\n    }\n  };\n\n  const classes = useFormStyles();\n  return (\n    <form className={classes.form} onSubmit={handleCreateNoteSubmit}>\n      <Grid\n        xs={12}\n        justify=\"space-between\"\n        direction=\"row\"\n        alignItems=\"center\"\n        container\n      >\n        <Grid className={classes.input} item xs={12}>\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            id=\"Note\"\n            multiline\n            type=\"text\"\n            rows={3}\n            rowsMax={5}\n            label=\"Enter Your Note\"\n            name=\"text\"\n            onChange={handleInputChange}\n            autoComplete=\"off\"\n            value={inputText}\n            error={error.isError}\n            helperText={error.isError ? error.message : null}\n          />\n        </Grid>\n        <Grid xs={12} className={classes.buttonWrapper}>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={loading}\n            className={classes.submit}\n          >\n            <CircularProgress\n              color=\"primary\"\n              size=\"22px\"\n              className={classes.loading}\n              style={loading ? { display: \"block\" } : { display: \"none\" }}\n            />\n            save\n          </Button>\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            disabled={loading}\n            className={classes.submit}\n            onClick={() => setInputText(\"\")}\n          >\n            clear\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n\nexport default CreateNote;\n"]},"metadata":{},"sourceType":"module"}