{"ast":null,"code":"var _jsxFileName = \"/Users/takasivenkatasandeep/Desktop/vamsi-sanjreevi-notes/src/Components/NoteList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Divider, Grid, IconButton, List, ListItem, ListItemSecondaryAction, ListItemText, Typography } from \"@material-ui/core\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport CreateNoteForm from \"./CreateNote\";\nimport useListStyles from \"../Themes/NotelistStyles\";\nimport uuid from \"react-uuid\";\nimport * as firebaseCalls from \"../services/firebase\";\nimport { LinearProgress } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NoteList(props) {\n  _s();\n\n  const [userNotes, setUserNotes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    let mounted = true;\n\n    const initializeNoteList = async () => {\n      const noteData = await firebaseCalls.getUserNotes(props.loggedinUser.id);\n\n      if (!mounted) {\n        return;\n      }\n\n      setUserNotes(noteData);\n      setLoading(false);\n    };\n\n    initializeNoteList();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const handleDeleteNoteClick = async id => {\n    await firebaseCalls.deleteNote(id);\n    setUserNotes(prevState => {\n      const newState = prevState.filter(note => note.id !== id);\n      return newState;\n    });\n  };\n\n  const classes = useListStyles();\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  } else {\n    if (userNotes.length !== 0) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        className: classes.paper,\n        position: \"static\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.heading,\n            variant: \"h4\",\n            component: \"h1\",\n            children: \"Your Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(CreateNoteForm, { ...props,\n            userNotes: userNotes,\n            setUserNotes: setUserNotes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(List, {\n            className: classes.list,\n            children: userNotes.map((userNote, index) => {\n              const noteNumber = index + 1;\n              return /*#__PURE__*/_jsxDEV(ListItem, {\n                dense: true,\n                className: classes.listItem,\n                children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"Index: \" + noteNumber\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  classes: {\n                    primary: classes.listText\n                  },\n                  primary: \"Note: \" + userNote.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                  className: classes.iconButton,\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    color: \"primary\",\n                    \"aria-label\": \"upload picture\",\n                    component: \"span\",\n                    variant: \"contained\",\n                    onClick: () => handleDeleteNoteClick(userNote.id),\n                    children: /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  className: classes.divider\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 21\n                }, this)]\n              }, uuid(), true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        className: classes.paper,\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          children: [/*#__PURE__*/_jsxDEV(CreateNoteForm, { ...props,\n            setUserNotes: setUserNotes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: \"No notes to display\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this);\n    }\n  }\n}\n\n_s(NoteList, \"neKtWwipZpqA+cNT9JnJS/xB/34=\", false, function () {\n  return [useListStyles];\n});\n\n_c = NoteList;\nexport default NoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteList\");","map":{"version":3,"sources":["/Users/takasivenkatasandeep/Desktop/vamsi-sanjreevi-notes/src/Components/NoteList.js"],"names":["React","useEffect","useState","Divider","Grid","IconButton","List","ListItem","ListItemSecondaryAction","ListItemText","Typography","DeleteForeverIcon","CreateNoteForm","useListStyles","uuid","firebaseCalls","LinearProgress","NoteList","props","userNotes","setUserNotes","loading","setLoading","mounted","initializeNoteList","noteData","getUserNotes","loggedinUser","id","handleDeleteNoteClick","deleteNote","prevState","newState","filter","note","classes","length","paper","heading","list","map","userNote","index","noteNumber","listItem","primary","listText","text","iconButton","divider"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Divider,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\nimport CreateNoteForm from \"./CreateNote\";\n\nimport useListStyles from \"../Themes/NotelistStyles\";\nimport uuid from \"react-uuid\";\nimport * as firebaseCalls from \"../services/firebase\";\nimport { LinearProgress } from \"@material-ui/core\";\nfunction NoteList(props) {\n  const [userNotes, setUserNotes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    let mounted = true;\n    const initializeNoteList = async () => {\n      const noteData = await firebaseCalls.getUserNotes(props.loggedinUser.id);\n      if (!mounted) {\n        return;\n      }\n\n      setUserNotes(noteData);\n      setLoading(false);\n    };\n    initializeNoteList();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const handleDeleteNoteClick = async (id) => {\n    await firebaseCalls.deleteNote(id);\n    setUserNotes((prevState) => {\n      const newState = prevState.filter((note) => note.id !== id);\n      return newState;\n    });\n  };\n\n  const classes = useListStyles();\n  if (loading) {\n    return <LinearProgress />;\n  } else {\n    if (userNotes.length !== 0) {\n      return (\n        <Grid xs={12} className={classes.paper} position=\"static\">\n          <Grid item xs={12}>\n            <Typography className={classes.heading} variant=\"h4\" component=\"h1\">\n              Your Notes\n            </Typography>\n            <hr />\n          </Grid>\n          <Grid item xs={12}>\n            <CreateNoteForm\n              {...props}\n              userNotes={userNotes}\n              setUserNotes={setUserNotes}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <List className={classes.list}>\n              {userNotes.map((userNote, index) => {\n                const noteNumber = index + 1;\n                return (\n                  <ListItem dense className={classes.listItem} key={uuid()}>\n                    <ListItemText primary={\"Index: \" + noteNumber} />\n                    <ListItemText\n                      classes={{ primary: classes.listText }}\n                      primary={\"Note: \" + userNote.text}\n                    />\n                    <ListItemSecondaryAction className={classes.iconButton}>\n                      <IconButton\n                        color=\"primary\"\n                        aria-label=\"upload picture\"\n                        component=\"span\"\n                        variant=\"contained\"\n                        onClick={() => handleDeleteNoteClick(userNote.id)}\n                      >\n                        <DeleteForeverIcon />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                    <Divider className={classes.divider} />\n                  </ListItem>\n                );\n              })}\n            </List>\n          </Grid>\n        </Grid>\n      );\n    } else {\n      return (\n        <Grid xs={12} className={classes.paper} position=\"static\">\n          <Grid>\n            <CreateNoteForm {...props} setUserNotes={setUserNotes} />\n            <center>\n              <Typography variant=\"h5\">No notes to display</Typography>\n            </center>\n          </Grid>\n        </Grid>\n      );\n    }\n  }\n}\n\nexport default NoteList;\n"]},"metadata":{},"sourceType":"module"}